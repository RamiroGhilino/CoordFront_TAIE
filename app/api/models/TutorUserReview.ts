/* tslint:disable */
/* eslint-disable */
/**
 * Turnero TAIE API
 * API correspondiente al trabajo final \"Turnero TAIE\", realizado por los alumnos Juan Manuel Villarreal y Ghilino Ramiro
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TutorUserReview
 */
export interface TutorUserReview {
    /**
     * 
     * @type {number}
     * @memberof TutorUserReview
     */
    readonly id: number;
    /**
     * 
     * @type {string}
     * @memberof TutorUserReview
     */
    comment: string;
    /**
     * 
     * @type {boolean}
     * @memberof TutorUserReview
     */
    occurred: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TutorUserReview
     */
    absent: boolean;
    /**
     * 
     * @type {number}
     * @memberof TutorUserReview
     */
    utility: number;
    /**
     * 
     * @type {number}
     * @memberof TutorUserReview
     */
    tutorUser: number;
    /**
     * 
     * @type {number}
     * @memberof TutorUserReview
     */
    studentUser: number;
    /**
     * 
     * @type {number}
     * @memberof TutorUserReview
     */
    tutorshipInstance: number;
}

/**
 * Check if a given object implements the TutorUserReview interface.
 */
export function instanceOfTutorUserReview(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "comment" in value;
    isInstance = isInstance && "occurred" in value;
    isInstance = isInstance && "absent" in value;
    isInstance = isInstance && "utility" in value;
    isInstance = isInstance && "tutorUser" in value;
    isInstance = isInstance && "studentUser" in value;
    isInstance = isInstance && "tutorshipInstance" in value;

    return isInstance;
}

export function TutorUserReviewFromJSON(json: any): TutorUserReview {
    return TutorUserReviewFromJSONTyped(json, false);
}

export function TutorUserReviewFromJSONTyped(json: any, ignoreDiscriminator: boolean): TutorUserReview {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'comment': json['comment'],
        'occurred': json['occurred'],
        'absent': json['absent'],
        'utility': json['utility'],
        'tutorUser': json['tutor_user'],
        'studentUser': json['student_user'],
        'tutorshipInstance': json['tutorship_instance'],
    };
}

export function TutorUserReviewToJSON(value?: TutorUserReview | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'comment': value.comment,
        'occurred': value.occurred,
        'absent': value.absent,
        'utility': value.utility,
        'tutor_user': value.tutorUser,
        'student_user': value.studentUser,
        'tutorship_instance': value.tutorshipInstance,
    };
}

