/* tslint:disable */
/* eslint-disable */
/**
 * Turnero TAIE API
 * API correspondiente al trabajo final \"Turnero TAIE\", realizado por los alumnos Juan Manuel Villarreal y Ghilino Ramiro
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PatchedAcademicYearRequest
 */
export interface PatchedAcademicYearRequest {
    /**
     * 
     * @type {number}
     * @memberof PatchedAcademicYearRequest
     */
    year?: number;
    /**
     * 
     * @type {Date}
     * @memberof PatchedAcademicYearRequest
     */
    start?: Date;
    /**
     * 
     * @type {Date}
     * @memberof PatchedAcademicYearRequest
     */
    end?: Date;
}

/**
 * Check if a given object implements the PatchedAcademicYearRequest interface.
 */
export function instanceOfPatchedAcademicYearRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PatchedAcademicYearRequestFromJSON(json: any): PatchedAcademicYearRequest {
    return PatchedAcademicYearRequestFromJSONTyped(json, false);
}

export function PatchedAcademicYearRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedAcademicYearRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'year': !exists(json, 'year') ? undefined : json['year'],
        'start': !exists(json, 'start') ? undefined : (new Date(json['start'])),
        'end': !exists(json, 'end') ? undefined : (new Date(json['end'])),
    };
}

export function PatchedAcademicYearRequestToJSON(value?: PatchedAcademicYearRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'year': value.year,
        'start': value.start === undefined ? undefined : (value.start.toISOString().substring(0,10)),
        'end': value.end === undefined ? undefined : (value.end.toISOString().substring(0,10)),
    };
}

