/* tslint:disable */
/* eslint-disable */
/**
 * Turnero TAIE API
 * API correspondiente al trabajo final \"Turnero TAIE\", realizado por los alumnos Juan Manuel Villarreal y Ghilino Ramiro
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TutorAreasRequest } from './TutorAreasRequest';
import {
    TutorAreasRequestFromJSON,
    TutorAreasRequestFromJSONTyped,
    TutorAreasRequestToJSON,
} from './TutorAreasRequest';

/**
 * 
 * @export
 * @interface ReadTutorUserScheduleRequest
 */
export interface ReadTutorUserScheduleRequest {
    /**
     * 
     * @type {TutorAreasRequest}
     * @memberof ReadTutorUserScheduleRequest
     */
    tutorUser: TutorAreasRequest;
    /**
     * 
     * @type {string}
     * @memberof ReadTutorUserScheduleRequest
     */
    modality: string;
    /**
     * 
     * @type {string}
     * @memberof ReadTutorUserScheduleRequest
     */
    day: string;
    /**
     * 
     * @type {string}
     * @memberof ReadTutorUserScheduleRequest
     */
    begin: string;
    /**
     * 
     * @type {string}
     * @memberof ReadTutorUserScheduleRequest
     */
    end: string;
    /**
     * 
     * @type {number}
     * @memberof ReadTutorUserScheduleRequest
     */
    capacity: number;
}

/**
 * Check if a given object implements the ReadTutorUserScheduleRequest interface.
 */
export function instanceOfReadTutorUserScheduleRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "tutorUser" in value;
    isInstance = isInstance && "modality" in value;
    isInstance = isInstance && "day" in value;
    isInstance = isInstance && "begin" in value;
    isInstance = isInstance && "end" in value;
    isInstance = isInstance && "capacity" in value;

    return isInstance;
}

export function ReadTutorUserScheduleRequestFromJSON(json: any): ReadTutorUserScheduleRequest {
    return ReadTutorUserScheduleRequestFromJSONTyped(json, false);
}

export function ReadTutorUserScheduleRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReadTutorUserScheduleRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'tutorUser': TutorAreasRequestFromJSON(json['tutor_user']),
        'modality': json['modality'],
        'day': json['day'],
        'begin': json['begin'],
        'end': json['end'],
        'capacity': json['capacity'],
    };
}

export function ReadTutorUserScheduleRequestToJSON(value?: ReadTutorUserScheduleRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'tutor_user': TutorAreasRequestToJSON(value.tutorUser),
        'modality': value.modality,
        'day': value.day,
        'begin': value.begin,
        'end': value.end,
        'capacity': value.capacity,
    };
}

