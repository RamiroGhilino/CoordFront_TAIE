/* tslint:disable */
/* eslint-disable */
/**
 * Turnero TAIE API
 * API correspondiente al trabajo final \"Turnero TAIE\", realizado por los alumnos Juan Manuel Villarreal y Ghilino Ramiro
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ReadTutorUserScheduleRequest } from './ReadTutorUserScheduleRequest';
import {
    ReadTutorUserScheduleRequestFromJSON,
    ReadTutorUserScheduleRequestFromJSONTyped,
    ReadTutorUserScheduleRequestToJSON,
} from './ReadTutorUserScheduleRequest';

/**
 * 
 * @export
 * @interface SearchTutorshipRequest
 */
export interface SearchTutorshipRequest {
    /**
     * 
     * @type {ReadTutorUserScheduleRequest}
     * @memberof SearchTutorshipRequest
     */
    schedule: ReadTutorUserScheduleRequest;
    /**
     * 
     * @type {Date}
     * @memberof SearchTutorshipRequest
     */
    date: Date;
    /**
     * 
     * @type {string}
     * @memberof SearchTutorshipRequest
     */
    area: string;
    /**
     * 
     * @type {string}
     * @memberof SearchTutorshipRequest
     */
    status: string;
}

/**
 * Check if a given object implements the SearchTutorshipRequest interface.
 */
export function instanceOfSearchTutorshipRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "schedule" in value;
    isInstance = isInstance && "date" in value;
    isInstance = isInstance && "area" in value;
    isInstance = isInstance && "status" in value;

    return isInstance;
}

export function SearchTutorshipRequestFromJSON(json: any): SearchTutorshipRequest {
    return SearchTutorshipRequestFromJSONTyped(json, false);
}

export function SearchTutorshipRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchTutorshipRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'schedule': ReadTutorUserScheduleRequestFromJSON(json['schedule']),
        'date': (new Date(json['date'])),
        'area': json['area'],
        'status': json['status'],
    };
}

export function SearchTutorshipRequestToJSON(value?: SearchTutorshipRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'schedule': ReadTutorUserScheduleRequestToJSON(value.schedule),
        'date': (value.date.toISOString().substring(0,10)),
        'area': value.area,
        'status': value.status,
    };
}

